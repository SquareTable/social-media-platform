{"version":3,"file":"offline.debug.min.js","sources":["../../utils/src/global.ts","../../utils/src/is.ts","../../utils/src/browser.ts","../../utils/src/logger.ts","../../utils/src/object.ts","../../utils/src/stacktrace.ts","../../utils/src/misc.ts","../../utils/src/normalize.ts","../../utils/src/memo.ts","../../../node_modules/localforage/dist/localforage.js","../src/offline.ts"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat: unknown, ty: string): boolean {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","import { getGlobalObject } from './global';\nimport { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isDebugBuild } from './env';\nimport { getGlobalObject } from './global';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/**\n * Temporarily unwrap `console.log` and friends in order to perform the given callback using the original methods.\n * Restores wrapping after the callback completes.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]:`, ...args);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]:`, ...args);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]:`, ...args);\n    });\n  }\n}\n\nconst sentryGlobal = global.__SENTRY__ || {};\nconst logger = (sentryGlobal.logger as Logger) || new Logger();\n\nif (isDebugBuild()) {\n  // Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\n  sentryGlobal.logger = logger;\n  global.__SENTRY__ = sentryGlobal;\n}\n\nexport { logger };\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nexport function convertToPlainObject(value: unknown): {\n  [key: string]: unknown;\n} {\n  let newObj = value as {\n    [key: string]: unknown;\n  };\n\n  if (isError(value)) {\n    newObj = {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value as ExtendedError),\n    };\n  } else if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    newObj = {\n      type: event.type,\n      target: serializeEventTarget(event.target),\n      currentTarget: serializeEventTarget(event.currentTarget),\n      ...getOwnProperties(event),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = event.detail;\n    }\n  }\n  return newObj;\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: { [key: string]: unknown }): { [key: string]: unknown } {\n  const extractedProps: { [key: string]: unknown } = {};\n  for (const property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      extractedProps[property] = obj[property];\n    }\n  }\n  return extractedProps;\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(val)) {\n      if (typeof val[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(val[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","import { StackFrame } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\nexport type StackParser = (stack: string, skipFirst?: number) => StackFrame[];\nexport type StackLineParserFn = (line: string) => StackFrame | undefined;\nexport type StackLineParser = [number, StackLineParserFn];\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      for (const parser of sortedParsers) {\n        const frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n","import { Primitive } from '@sentry/types';\n\nimport { isError, isEvent, isNaN, isSyntheticEvent } from './is';\nimport { memoBuilder, MemoFunc } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nexport function normalize(input: unknown, depth: number = +Infinity, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, there is no key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  const valueWithToJSON = value as unknown & { toJSON?: () => Primitive | ObjOrArray<unknown> };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (isError(value) || isEvent(value) ? convertToPlainObject(value) : value) as ObjOrArray<unknown>;\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) as Prototype).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isDebugBuild, logger, normalize, uuid4 } from '@sentry/utils';\nimport localForage from 'localforage';\n\ntype LocalForage = {\n  setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T>;\n  iterate<T, U>(\n    iteratee: (value: T, key: string, iterationNumber: number) => U,\n    callback?: (err: any, result: U) => void,\n  ): Promise<U>;\n  removeItem(key: string, callback?: (err: any) => void): Promise<void>;\n  length(): Promise<number>;\n};\n\nexport type Item = { key: string; value: Event };\n\n/**\n * cache offline errors and send when connected\n */\nexport class Offline implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Offline';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = Offline.id;\n\n  /**\n   * the global instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public global: any;\n\n  /**\n   * the current hub instance\n   */\n  public hub?: Hub;\n\n  /**\n   * maximum number of events to store while offline\n   */\n  public maxStoredEvents: number;\n\n  /**\n   * event cache\n   */\n  public offlineEventStore: LocalForage;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { maxStoredEvents?: number } = {}) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.global = getGlobalObject<any>();\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localForage.createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in this.global) {\n      this.global.addEventListener('online', () => {\n        void this._sendEvents().catch(() => {\n          isDebugBuild() && logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    addGlobalEventProcessor((event: Event) => {\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in this.global && 'onLine' in this.global.navigator && !this.global.navigator.onLine) {\n          void this._cacheEvent(event)\n            .then((_event: Event): Promise<void> => this._enforceMaxEvents())\n            .catch((_error): void => {\n              isDebugBuild() && logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    });\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in this.global && 'onLine' in this.global.navigator && this.global.navigator.onLine) {\n      void this._sendEvents().catch(() => {\n        isDebugBuild() && logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n  private async _cacheEvent(event: Event): Promise<Event> {\n    return this.offlineEventStore.setItem<Event>(uuid4(), normalize(event));\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n  private async _enforceMaxEvents(): Promise<void> {\n    const events: Array<{ event: Event; cacheKey: string }> = [];\n\n    return this.offlineEventStore\n      .iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        (): Promise<void> =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error): void => {\n        isDebugBuild() && logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n  private async _purgeEvent(cacheKey: string): Promise<void> {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n  private async _purgeEvents(cacheKeys: string[]): Promise<void> {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n  private async _sendEvents(): Promise<void> {\n    return this.offlineEventStore.iterate<Event, void>((event: Event, cacheKey: string, _index: number): void => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        void this._purgeEvent(cacheKey).catch((_error): void => {\n          isDebugBuild() && logger.warn('could not purge event from cache');\n        });\n      } else {\n        isDebugBuild() && logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n}\n"],"names":["fallbackGlobalObject","getGlobalObject","window","self","objectToString","Object","prototype","toString","isError","wat","call","isInstanceOf","Error","isBuiltin","ty","isEvent","Event","isSyntheticEvent","isPlainObject","base","_e","_htmlElementAsString","el","keyAttrs","className","classes","key","attr","i","elem","out","tagName","push","toLowerCase","keyAttrPairs","length","filter","keyAttr","getAttribute","map","forEach","keyAttrPair","id","split","allowedAttrs","join","global","PREFIX","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","console","wrappedLevels","level","__sentry_original__","result","keys","this","_enabled","Logger","_i","args","_a","log","warn","error","sentryGlobal","__SENTRY__","logger","serializeEventTarget","target","Element","currentElem","height","len","sepLength","nextStr","parentNode","reverse","_oO","htmlTreeAsString","getOwnProperties","obj","extractedProps","property","hasOwnProperty","defaultFunctionName","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","Math","random","normalize","input","depth","maxProperties","Infinity","visit","err","ERROR","value","memo","hasWeakSet","inner","WeakSet","has","add","delete","splice","memoize","unmemoize","valueWithToJSON","toJSON","includes","stringified","_events","document","fn","name","e","getFunctionName","String","getPrototypeOf","constructor","stringifyValue","startsWith","normalized","Array","isArray","numAdded","visitable","newObj","message","stack","event_1","type","currentTarget","CustomEvent","detail","convertToPlainObject","visitKey","visitValue","t","n","s","o","u","require","f","code","l","exports","_dereq_","module","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","tryCatch","status","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","array","searchElement","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","Offline","maxStoredEvents","offlineEventStore","localForage","addGlobalEventProcessor","getCurrentHub","hub","addEventListener","_this","_sendEvents","catch","event","getIntegration","onLine","_cacheEvent","_event","_enforceMaxEvents","_error","events","cacheKey","_index","_purgeEvents","sort","a","b","timestamp","cacheKeys","_purgeEvent","captureEvent"],"mappings":"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"}